# ============================================= #
# Start with defaults from the Sensible plugin  #
# --------------------------------------------- #
run-shell /nix/store/qfc6wwr24a9dgh9kr0ad56gydswf0mnn-tmuxplugin-sensible-unstable-2017-09-05/share/tmux-plugins/sensible/sensible.tmux
# ============================================= #

set  -g default-terminal "tmux-256color"
set  -g base-index      0
setw -g pane-base-index 0
# We need to set default-shell before calling new-session
set  -g default-shell "/nix/store/y6b258mhrmgn95cl2qzky2fblh9aswrj-zsh-5.9/bin/zsh"





set -g status-keys emacs
set -g mode-keys   emacs







set  -g mouse             off
setw -g aggressive-resize off
setw -g clock-mode-style  12
set  -s escape-time       500
set  -g history-limit     100000

source-file /nix/store/l901wz2651nhkv3nfrhkmsfy69h014v1-4mpf6h1a662m9av5lwhjs3h3zi6s0lz6-onedarker/base16-4mpf6h1a662m9av5lwhjs3h3zi6s0lz6-onedarker.conf

 set -as terminal-features ",xterm-256color:RGB"
# automatically renumber tmux windows
 set -g renumber-windows on

 set -g base-index 1
 setw -g pane-base-index 1
 set -sg escape-time 0
 set -g set-titles on

 set-option -g focus-events on

 # enable mouse support for switching panes/windows
 set -g mouse on
 bind -n WheelUpPane {
     if -F '#{==:#{window_name},nvim}' {
         send-keys -M
     } {
         copy-mode -e
     }
 }

 set-option -g detach-on-destroy off

 ######################
 #### Key Bindings ####
 ######################
 unbind C-b
 set-option -g prefix C-a
 # bind-key C-s send-prefix

 unbind Escape

 bind-key Space copy-mode

 # vi mode
 set -g status-keys emacs
 setw -g mode-keys vi
 bind-key -T copy-mode-vi v send -X begin-selection
 bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
 bind-key -T copy-mode-vi Escape send -X cancel
 bind-key -T copy-mode-vi d send -X halfpage-down
 bind-key -T copy-mode-vi u send -X halfpage-up

 bind r source-file ~/.config/tmux/tmux.conf \; display "Config Reloaded!"

 bind | split-window -h -c "#{pane_current_path}"
 bind - split-window -v -c "#{pane_current_path}"

 bind -r ^ last-window

 is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
 is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
     | grep -iqE 'fzf'"
 not_tmux='`echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"` || `echo "#{pane_current_command}" | grep -iqE "(^|\/)fzf"`'
 bind-key -n C-h if-shell "$not_tmux" "send-keys C-h" "select-pane -L"
 bind-key -n C-j if-shell "$not_tmux" "send-keys C-j" "select-pane -D"
 bind-key -n C-k if-shell "$not_tmux" "send-keys C-k" "select-pane -U"
 bind-key -n C-l if-shell "$not_tmux" "send-keys C-l" "select-pane -R"
 # bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
 # bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  (if-shell "$is-fzf" 'send-keys C-j' 'select-pane -D')
 # bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
 # bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

 bind-key -n C-] send-keys C-l

 # bind-key -n C-1 select-window -t :=1
 # bind-key -n C-2 select-window -t :=2

 bind-key n previous-window
 bind-key p next-window
 bind-key [ swap-window -d -t -1
 bind-key ] swap-window -d -t +1
 bind-key i select-pane -l

 bind-key -n M-n previous-window
 bind-key -n M-p next-window
 bind-key -n M-k previous-window
 bind-key -n M-j next-window
 bind-key -n M-1 select-window -t :=1
 bind-key -n M-2 select-window -t :=2
 bind-key -n M-3 select-window -t :=3
 bind-key -n M-h switch-client -p
 bind-key -n M-l switch-client -n
 bind-key -n M-Tab switch-client -n

 bind-key x kill-pane

 unbind v
 unbind h
 unbind % # Split vertically
 unbind '"' # Split horizontally
 bind-key v split-window -v -p 35 -c "#{pane_current_path}"
 bind-key h split-window -h -p 35 -c "#{pane_current_path}"
 # bind-key s split-window -c "#{pane_current_path}"
 bind-key c new-window -c "#{pane_current_path}"
 bind-key -n M-c new-window -c "#{pane_current_path}"

 # bind-key -n M-s run-shell "tmux list-sessions | sed -E 's/:.*$//' | (fzf-tmux -p || echo '#{session_name}') | xargs tmux switch-client -t || exit 0"
 bind-key -n M-s run-shell "fsession"

 bind-key e set-option status

 bind-key -r H run-shell "~/.dotfiles/bin/tmux-sessionizer code/soltan"
 bind-key -r D run-shell "~/.dotfiles/bin/tmux-sessionizer .dotfiles"
 bind-key -r N run-shell "~/.dotfiles/bin/tmux-sessionizer .config/nvim"

 bind-key g new-window -c "#{pane_current_path}" -n "git" "lazygit"
 bind-key t new-window -c "#{pane_current_path}" -n "terminal" \; split-window -h -c "#{pane_current_path}"

 bind-key f run-shell "~/.dotfiles/bin/tmux-sessionizer"
 bind-key -n M-f run-shell "~/.dotfiles/bin/tmux-sessionizer"
 bind-key -n M-g run-shell "~/.dotfiles/bin/fhoogle"
 bind-key -n M-m run-shell "fmanix"
 bind-key -r i run-shell "tmux neww tmux-cht.sh"

 set-option -g status on

 ## plugins
 # set -g @plugin 'tmux-plugins/tmux-sensible'
 # set -g @plugin 'tmux-plugins/tmux-resurrect'
 #
 # run '~/.tmux/plugins/tpm/tpm'

 # Theme
 set -g status-style 'bg=default,fg=white' # transparent status bar
 set -g status-position bottom
 set -g pane-active-border-style "fg=white,bg=default"
 set -g pane-border-style "fg=brightblack,bg=default"

 set -g status-left-length 70
 set -g status-left "#[fg=blue,bold]#S " # session name
 # set -ga status-left "#[fg=white,bold] ямл "
 # set -ga status-left "#[fg=white,nobold]#(gitmux -timeout 300ms -cfg $HOME/.dotfiles/tmux/gitmux.conf) "

 set -g status-right-length 70
 set -g status-right ""

 # [0 - command]
 set -g window-status-format "#[fg=brightblack,nobold,bg=default]["
 set -ga window-status-format "#[fg=brightblack,bg=default]#I #F "
 set -ga window-status-format "#[fg=white,bg=default]#W"
 set -ga window-status-format "#[fg=brightblack,nobold,bg=default]]"

 # [0 * command]
 set -g window-status-current-format "#[fg=brightblack,nobold,bg=default]["
 set -ga window-status-current-format "#[fg=brightblack,nobold,bg=default]#I "
 set -ga window-status-current-format "#[fg=magenta,nobold,bg=default]#F "
 set -ga window-status-current-format "#[fg=white,bold,bg=default]#W"
 set -ga window-status-current-format "#[fg=brightblack,nobold,bg=default]]"
